(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[66],{

/***/ "./examples/docs/zh-CN/upload.md":
/*!***************************************!*\
  !*** ./examples/docs/zh-CN/upload.md ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _upload_md_vue_type_template_id_07488a3b__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=07488a3b */ \"./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b\");\n/* harmony import */ var _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./upload.md?vue&type=script&lang=js */ \"./examples/docs/zh-CN/upload.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _upload_md_vue_type_template_id_07488a3b__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"07488a3b\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('07488a3b', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('07488a3b', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./upload.md?vue&type=template&id=07488a3b */ \"./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _upload_md_vue_type_template_id_07488a3b__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=07488a3b */ \"./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b\");\n(() => {\n    api.rerender('07488a3b', _upload_md_vue_type_template_id_07488a3b__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/zh-CN/upload.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL3poLUNOL3VwbG9hZC5tZD82MzRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFrRTtBQUNWO0FBQ0w7QUFDbkQsMEVBQU0sVUFBVSwrRUFBTTtBQUN0QjtBQUNBLElBQUksSUFBVTtBQUNkLEVBQUUsMEVBQU07QUFDUjtBQUNBO0FBQ0Esb0NBQW9DLDBFQUFNO0FBQzFDLDJCQUEyQiwwRUFBTTtBQUNqQzs7QUFFQSxvQkFBb0IsZ0hBQTJDLEVBQUU7QUFBQTtBQUNqRSw2QkFBNkIsK0VBQU07QUFDbkMsR0FBRzs7QUFFSDs7QUFFQSwwRUFBTTs7QUFFUyx5SSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvemgtQ04vdXBsb2FkLm1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA3NDg4YTNiXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICBzY3JpcHQuX19obXJJZCA9IFwiMDc0ODhhM2JcIlxuICBjb25zdCBhcGkgPSBfX1ZVRV9ITVJfUlVOVElNRV9fXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFhcGkuY3JlYXRlUmVjb3JkKCcwNzQ4OGEzYicsIHNjcmlwdCkpIHtcbiAgICBhcGkucmVsb2FkKCcwNzQ4OGEzYicsIHNjcmlwdClcbiAgfVxuICBcbiAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3VwbG9hZC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNzQ4OGEzYlwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCcwNzQ4OGEzYicsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL3poLUNOL3VwbG9hZC5tZFwiXG5cbmV4cG9ydCBkZWZhdWx0IHNjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/zh-CN/upload.md\n");

/***/ }),

/***/ "./examples/docs/zh-CN/upload.md?vue&type=script&lang=js":
/*!***************************************************************!*\
  !*** ./examples/docs/zh-CN/upload.md?vue&type=script&lang=js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/zh-CN/upload.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL3poLUNOL3VwbG9hZC5tZD9lMjFiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQTJNIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy96aC1DTi91cGxvYWQubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/zh-CN/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b":
/*!*********************************************************************!*\
  !*** ./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b ***!
  \*********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_07488a3b__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=template&id=07488a3b */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_07488a3b__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL3poLUNOL3VwbG9hZC5tZD80ZTBmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy96aC1DTi91cGxvYWQubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MDc0ODhhM2IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA3NDg4YTNiXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/zh-CN/upload.md?vue&type=script&lang=js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/zh-CN/upload.md?vue&type=script&lang=js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"before-remove\": _ctx.beforeRemove,\n          multiple: \"\",\n          limit: 3,\n          \"on-exceed\": _ctx.handleExceed,\n          \"file-list\": _ctx.fileList\n        }, {\n          tip: _withCtx(() => [_createVNode(\"div\", {\n            class: \"el-upload__tip\"\n          }, \"只能上传jpg/png文件，且不超过500kb\")]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"before-remove\", \"on-exceed\", \"file-list\"]);\n      }\n\n      const {\n        reactive,\n        toRefs,\n        getCurrentInstance\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const democomponentExport = {\n        setup() {\n          let state = reactive({\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          });\n          const self = getCurrentInstance().ctx;\n\n          const handleRemove = (file, fileList) => {\n            console.log(file, fileList);\n          };\n\n          const handlePreview = file => {\n            console.log(file);\n          };\n\n          const handleExceed = (files, fileList) => {\n            self.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\n          };\n\n          const beforeRemove = (file, fileList) => {// return self.$confirm(`确定移除 ${ file.name }？`);\n          };\n\n          return { ...toRefs(state),\n            handleRemove,\n            handlePreview,\n            handleExceed,\n            beforeRemove\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"avatar-uploader\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"show-file-list\": false,\n          \"on-success\": _ctx.handleAvatarSuccess,\n          \"before-upload\": _ctx.beforeAvatarUpload\n        }, {\n          default: _withCtx(() => [_ctx.imageUrl ? (_openBlock(), _createBlock(\"img\", {\n            key: 0,\n            src: _ctx.imageUrl,\n            class: \"avatar\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])) : (_openBlock(), _createBlock(\"i\", {\n            key: 1,\n            class: \"el-icon-plus avatar-uploader-icon\"\n          }))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-success\", \"before-upload\"]);\n      }\n\n      const {\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const {\n        Message\n      } = Element3;\n      const democomponentExport = {\n        setup() {\n          const imageUrl = ref('');\n\n          const handleAvatarSuccess = (res, file) => {\n            imageUrl.value = URL.createObjectURL(file.raw);\n          };\n\n          const beforeAvatarUpload = file => {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n              Message.error('上传头像图片只能是 JPG 格式!');\n            }\n\n            if (!isLt2M) {\n              Message.error('上传头像图片大小不能超过 2MB!');\n            }\n\n            return isJPG && isLt2M;\n          };\n\n          return {\n            imageUrl,\n            handleAvatarSuccess,\n            beforeAvatarUpload\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"list-type\": \"picture-card\",\n          \"on-preview\": _ctx.handlePictureCardPreview,\n          \"on-remove\": _ctx.handleRemove\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-plus\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\"]), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible,\n          \"onUpdate:visible\": $event => _ctx.dialogVisible = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            src: _ctx.dialogImageUrl,\n            alt: \"\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\", \"onUpdate:visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        ref,\n        unref\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const democomponentExport = {\n        setup() {\n          const dialogImageUrl = ref('');\n          const dialogVisible = ref(false);\n\n          const handleRemove = (file, fileList) => {\n            console.log(file, fileList);\n          };\n\n          const handlePictureCardPreview = file => {\n            dialogImageUrl.value = unref(file).url;\n            dialogVisible.value = true;\n          };\n\n          return {\n            dialogImageUrl,\n            dialogVisible,\n            handleRemove,\n            handlePictureCardPreview\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"list-type\": \"picture-card\",\n          ref: \"uploadRef\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-plus\"\n          })]),\n          file: _withCtx(({\n            file\n          }) => [_createVNode(\"img\", {\n            class: \"el-upload-list__item-thumbnail\",\n            src: file.url,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"]), _createVNode(\"span\", {\n            class: \"el-upload-list__item-actions\"\n          }, [_createVNode(\"span\", {\n            class: \"el-upload-list__item-preview\",\n            onClick: $event => _ctx.handlePictureCardPreview(file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-zoom-in\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"]), _createVNode(\"span\", {\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleDownload(file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-download\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"]), _createVNode(\"span\", {\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleRemove(file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-delete\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])])]),\n          _: 1\n        }, 512\n        /* NEED_PATCH */\n        ), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible,\n          \"onUpdate:visible\": $event => _ctx.dialogVisible = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            style: {\n              \"width\": \"100%\"\n            }\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\", \"onUpdate:visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        ref,\n        unref\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const democomponentExport = {\n        setup() {\n          const dialogImageUrl = ref('');\n          const dialogVisible = ref(false);\n          const uploadRef = ref(null);\n\n          const handleRemove = file => {\n            console.log('remove');\n            uploadRef.value.handleRemove(file);\n          };\n\n          const handlePictureCardPreview = file => {\n            dialogImageUrl.value = unref(file).url;\n            dialogVisible.value = true;\n          };\n\n          const handleDownload = file => {\n            console.log('DownLoad');\n          };\n\n          return {\n            dialogImageUrl,\n            dialogVisible,\n            uploadRef,\n            handleRemove,\n            handlePictureCardPreview,\n            handleDownload\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          \"list-type\": \"picture\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"选择文件\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible,\n          \"onUpdate:visible\": $event => _ctx.dialogVisible = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            style: {\n              \"width\": \"100%\"\n            }\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\", \"onUpdate:visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        reactive,\n        ref,\n        unref,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          });\n          const dialogImageUrl = ref('');\n          const dialogVisible = ref(false);\n\n          const handleRemove = (file, fileList) => {\n            console.log(file, fileList);\n          };\n\n          const handlePreview = file => {\n            dialogImageUrl.value = unref(file).url;\n            dialogVisible.value = true;\n          };\n\n          return { ...toRefs(state),\n            dialogVisible,\n            dialogImageUrl,\n            handleRemove,\n            handlePreview\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-change\": _ctx.handleChange,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"点击上传\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-change\", \"file-list\"]);\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          });\n\n          const handleChange = (file, fileList) => {\n            console.log(file);\n            console.log(fileList);\n          };\n\n          return { ...toRefs(state),\n            handleChange\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          drag: \"\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          multiple: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-upload\"\n          }), _createVNode(\"div\", {\n            class: \"el-upload__text\"\n          }, [_createTextVNode(\"将文件拖到此处，或\"), _createVNode(\"em\", null, \"点击上传\")]), _createVNode(\"div\", {\n            class: \"el-upload__tip\",\n            slot: \"tip\"\n          }, \"只能上传jpg/png文件，且不超过500kb\")]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          ref: \"upload\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          \"auto-upload\": false\n        }, {\n          trigger: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"选取文件\")]),\n            _: 1\n          })]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            style: {\n              \"margin-left\": \"10px\"\n            },\n            size: \"small\",\n            type: \"success\",\n            onClick: _ctx.submitUpload\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"开始上传至服务器\")]),\n            _: 1\n          }, 8\n          /* PROPS */\n          , [\"onClick\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const {\n        reactive,\n        ref,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          });\n          const upload = ref(null);\n\n          const submitUpload = () => {\n            upload.value.submit();\n          };\n\n          const handleRemove = (file, fileList) => {\n            console.log(file, fileList);\n          };\n\n          const handlePreview = file => {\n            console.log(file);\n          };\n\n          return { ...toRefs(state),\n            submitUpload,\n            handleRemove,\n            handlePreview,\n            upload\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/zh-CN/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b ***!
  \*****************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", null, \"Upload 上传\", -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"通过点击或者拖拽上传文件\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"点击上传\", -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"通过 slot 你可以传入自定义的上传按钮类型和文字提示。可通过设置\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"limit\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"和\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-exceed\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"来限制上传文件的个数和定义超出限制时的行为。可通过设置\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-remove\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"来阻止文件移除操作。\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :before-remove=\\\"beforeRemove\\\"\\n  multiple\\n  :limit=\\\"3\\\"\\n  :on-exceed=\\\"handleExceed\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">点击上传</el-button>\\n  <template v-slot:tip>\\n      <div class=\\\"el-upload__tip\\\">只能上传jpg/png文件，且不超过500kb</div>\\n  </template>\\n</el-upload>\\n<script>\\n  import { reactive , toRefs , getCurrentInstance } from 'vue';\\n  export default {\\n    setup(){\\n      let state = reactive({\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      });\\n      const self = getCurrentInstance().ctx;\\n      const handleRemove = (file, fileList) => {\\n        console.log(file, fileList);\\n      }\\n      const handlePreview = (file) => {\\n        console.log(file);\\n      }\\n      const handleExceed = (files, fileList) => {\\n        self.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\\n      }\\n      const beforeRemove = (file, fileList) => {\\n        // return self.$confirm(`确定移除 ${ file.name }？`);\\n      }\\n\\n      return {\\n        ...toRefs(state),\\n        handleRemove,\\n        handlePreview,\\n        handleExceed,\\n        beforeRemove\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"用户头像上传\", -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"使用 \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-upload\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 限制用户上传的图片格式和大小。\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"avatar-uploader\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :show-file-list=\\\"false\\\"\\n  :on-success=\\\"handleAvatarSuccess\\\"\\n  :before-upload=\\\"beforeAvatarUpload\\\">\\n<img v-if=\\\"imageUrl\\\" :src=\\\"imageUrl\\\" class=\\\"avatar\\\">\\n<i v-else class=\\\"el-icon-plus avatar-uploader-icon\\\"></i>\\n</el-upload>\\n\\n<style>\\n  .avatar-uploader .el-upload {\\n    border: 1px dashed #d9d9d9;\\n    border-radius: 6px;\\n    cursor: pointer;\\n    position: relative;\\n    overflow: hidden;\\n  }\\n  .avatar-uploader .el-upload:hover {\\n    border-color: #409EFF;\\n  }\\n  .avatar-uploader .avatar-uploader-icon {\\n    font-size: 28px;\\n    color: #8c939d;\\n    width: 178px;\\n    height: 178px;\\n    line-height: 178px;\\n    text-align: center;\\n  }\\n  .avatar {\\n    width: 178px;\\n    height: 178px;\\n    display: block;\\n  }\\n</style>\\n\\n<script>\\n  import { ref } from 'vue';\\n  import { Message } from 'element3';\\n  export default {\\n    setup(){\\n      const imageUrl = ref('');\\n\\n      const handleAvatarSuccess = (res, file) => {\\n        imageUrl.value = URL.createObjectURL(file.raw);\\n      }\\n      const beforeAvatarUpload = (file) => {\\n        const isJPG = file.type === 'image/jpeg';\\n        const isLt2M = file.size / 1024 / 1024 < 2;\\n\\n        if (!isJPG) {\\n          Message.error('上传头像图片只能是 JPG 格式!');\\n        }\\n        if (!isLt2M) {\\n          Message.error('上传头像图片大小不能超过 2MB!');\\n        }\\n        return isJPG && isLt2M;\\n      }\\n\\n      return {\\n        imageUrl,\\n        handleAvatarSuccess,\\n        beforeAvatarUpload\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"照片墙\", -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"使用 \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"list-type\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 属性来设置文件列表的样式。\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  list-type=\\\"picture-card\\\"\\n  :on-preview=\\\"handlePictureCardPreview\\\"\\n  :on-remove=\\\"handleRemove\\\">\\n  <i class=\\\"el-icon-plus\\\"></i>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\" v-model:visible=\\\"dialogVisible\\\">\\n  <img :src=\\\"dialogImageUrl\\\" alt=\\\"\\\" style=\\\"width: 100%;\\\">\\n</el-dialog>\\n<script>\\n  import { ref, unref } from 'vue';\\n  export default {\\n    setup(){\\n      const dialogImageUrl = ref('');\\n      const dialogVisible = ref(false);\\n\\n      const handleRemove = (file, fileList) => {\\n        console.log(file, fileList);\\n      }\\n      const handlePictureCardPreview = (file) => {\\n        dialogImageUrl.value = unref(file).url;\\n        dialogVisible.value = true;\\n      }\\n\\n      return {\\n        dialogImageUrl,\\n        dialogVisible,\\n        handleRemove,\\n        handlePictureCardPreview\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"文件缩略图\", -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"使用 \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"scoped-slot\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 去设置缩略图模版。\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"  <el-upload\\n    action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n    list-type=\\\"picture-card\\\"\\n    ref=\\\"uploadRef\\\"\\n    :auto-upload=\\\"false\\\">\\n    <template #default>\\n      <i class=\\\"el-icon-plus\\\"></i>\\n    </template>\\n    <template #file=\\\"{file}\\\">\\n      <img class=\\\"el-upload-list__item-thumbnail\\\" :src=\\\"file.url\\\" alt=\\\"\\\">\\n      <span class=\\\"el-upload-list__item-actions\\\">\\n        <span class=\\\"el-upload-list__item-preview\\\" @click=\\\"handlePictureCardPreview(file)\\\">\\n          <i class=\\\"el-icon-zoom-in\\\"></i>\\n        </span>\\n        <span class=\\\"el-upload-list__item-delete\\\" @click=\\\"handleDownload(file)\\\">\\n          <i class=\\\"el-icon-download\\\"></i>\\n        </span>\\n        <span class=\\\"el-upload-list__item-delete\\\" @click=\\\"handleRemove(file)\\\">\\n          <i class=\\\"el-icon-delete\\\"></i>\\n        </span>\\n      </span>\\n    </template>\\n  </el-upload>\\n  <el-dialog :visible.sync=\\\"dialogVisible\\\" v-model:visible=\\\"dialogVisible\\\">\\n    <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" style=\\\"width: 100%\\\">\\n  </el-dialog>\\n<script>\\nimport { ref, unref } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const dialogImageUrl = ref('')\\n    const dialogVisible = ref(false)\\n    const uploadRef = ref(null)\\n\\n    const handleRemove = (file) => {\\n      console.log('remove')\\n      uploadRef.value.handleRemove(file)\\n    }\\n\\n    const handlePictureCardPreview = (file) => {\\n      dialogImageUrl.value = unref(file).url\\n      dialogVisible.value = true\\n    }\\n\\n    const handleDownload = (file) => {\\n      console.log('DownLoad')\\n    }\\n\\n    return {\\n      dialogImageUrl,\\n      dialogVisible,\\n      uploadRef,\\n      handleRemove,\\n      handlePictureCardPreview,\\n      handleDownload\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"图片列表缩略图\", -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"上传图片文件, 点击已上传的图片列表可查看缩略图\", -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"  <el-upload\\n    action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n    :on-preview=\\\"handlePreview\\\"\\n    :on-remove=\\\"handleRemove\\\"\\n    :file-list=\\\"fileList\\\"\\n    list-type=\\\"picture\\\">\\n    <el-button size=\\\"small\\\" type=\\\"primary\\\">选择文件</el-button>\\n  </el-upload>\\n  <el-dialog :visible.sync=\\\"dialogVisible\\\" v-model:visible=\\\"dialogVisible\\\">\\n    <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" style=\\\"width: 100%\\\">\\n  </el-dialog>\\n<script>\\nimport { reactive, ref, unref, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      fileList: [\\n        {\\n          name: 'food.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        },\\n        {\\n          name: 'food2.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }]\\n    })\\n    const dialogImageUrl = ref('');\\n    const dialogVisible = ref(false)\\n\\n    const handleRemove = (file, fileList) => {\\n      console.log(file, fileList)\\n    }\\n\\n    const handlePreview = (file) => {\\n      dialogImageUrl.value = unref(file).url\\n      dialogVisible.value = true\\n    }\\n\\n    return {\\n      ...toRefs(state),\\n      dialogVisible,\\n      dialogImageUrl,\\n      handleRemove,\\n      handlePreview,\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"上传文件列表控制\", -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"上传文件之前、上传成功、失败都触发 \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-change\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 钩子, 可通过该钩子函数来对列表进行控制,\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"  <el-upload\\n    action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n    :on-change=\\\"handleChange\\\"\\n    :file-list=\\\"fileList\\\">\\n    <el-button size=\\\"small\\\" type=\\\"primary\\\">点击上传</el-button>\\n  </el-upload>\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      fileList: [\\n        {\\n          name: 'food.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        },\\n        {\\n          name: 'food2.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }]\\n    })\\n\\n    const handleChange = (file, fileList) => {\\n      console.log(file)\\n      console.log(fileList)\\n    }\\n\\n    return {\\n      ...toRefs(state),\\n      handleChange\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"拖拽上传\", -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  drag\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  multiple>\\n  <i class=\\\"el-icon-upload\\\"></i>\\n  <div class=\\\"el-upload__text\\\">将文件拖到此处，或<em>点击上传</em></div>\\n  <div class=\\\"el-upload__tip\\\" slot=\\\"tip\\\">只能上传jpg/png文件，且不超过500kb</div>\\n</el-upload>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", null, \"手动上传\", -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"可控制已选择文件列表上传的时机，调用 \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"upload\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 实例的 \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"submit\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 方法\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-upload\\n    ref=\\\"upload\\\"\\n    action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n    :on-preview=\\\"handlePreview\\\"\\n    :on-remove=\\\"handleRemove\\\"\\n    :file-list=\\\"fileList\\\"\\n    :auto-upload=\\\"false\\\">\\n    <template v-slot:trigger>\\n      <el-button size=\\\"small\\\" type=\\\"primary\\\">选取文件</el-button>\\n    </template>\\n    <el-button style=\\\"margin-left: 10px;\\\" size=\\\"small\\\" type=\\\"success\\\" @click=\\\"submitUpload\\\">开始上传至服务器</el-button>\\n  </el-upload>\\n</template>\\n<script>\\nimport { reactive, ref, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      fileList: [\\n        {\\n          name: 'food.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        },\\n        {\\n          name: 'food2.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }]\\n    })\\n\\n    const upload = ref(null)\\n\\n    const submitUpload = () => {\\n      upload.value.submit()\\n    }\\n    const handleRemove = (file, fileList) => {\\n      console.log(file, fileList)\\n    }\\n    const handlePreview = (file) => {\\n      console.log(file)\\n    }\\n\\n    return {\\n      ...toRefs(state),\\n      submitUpload,\\n      handleRemove,\\n      handlePreview,\\n      upload\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3>Attribute</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>action</td><td>必选参数，上传的地址</td><td>string</td><td>—</td><td>—</td></tr><tr><td>headers</td><td>设置上传的请求头部</td><td>object</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>是否支持多选文件</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>data</td><td>上传时附带的额外参数</td><td>object</td><td>—</td><td>—</td></tr><tr><td>name</td><td>上传的文件字段名</td><td>string</td><td>—</td><td>file</td></tr><tr><td>with-credentials</td><td>支持发送 cookie 凭证信息</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-file-list</td><td>是否显示已上传文件列表</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>drag</td><td>是否启用拖拽上传</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>accept</td><td>接受上传的<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept\\\">文件类型</a>（thumbnail-mode 模式下此参数无效）</td><td>string</td><td>—</td><td>—</td></tr><tr><td>on-preview</td><td>点击文件列表中已上传的文件时的钩子</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>on-remove</td><td>文件列表移除文件时的钩子</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-success</td><td>文件上传成功时的钩子</td><td>function(response, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-error</td><td>文件上传失败时的钩子</td><td>function(err, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-progress</td><td>文件上传时的钩子</td><td>function(event, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-change</td><td>文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>before-upload</td><td>上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传。</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>before-remove</td><td>删除文件之前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除。</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>list-type</td><td>文件列表的类型</td><td>string</td><td>text/picture/picture-card</td><td>text</td></tr><tr><td>auto-upload</td><td>是否在选取文件后立即进行上传</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>file-list</td><td>上传的文件列表, 例如: [{name: &#39;food.jpg&#39;, url: &#39;https://xxx.cdn.com/xxx.jpg&#39;}]</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>http-request</td><td>覆盖默认的上传行为，可以自定义上传的实现</td><td>function</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>limit</td><td>最大允许上传个数</td><td>number</td><td>—</td><td>—</td></tr><tr><td>on-exceed</td><td>文件超出个数限制时的钩子</td><td>function(files, fileList)</td><td>—</td><td>-</td></tr></tbody></table><h3>Slot</h3><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>trigger</td><td>触发文件选择框的内容</td></tr><tr><td>tip</td><td>提示说明文字</td></tr></tbody></table><h3>Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>clearFiles</td><td>清空已上传的文件列表（该方法不支持在 before-upload 中调用）</td><td>—</td></tr><tr><td>abort</td><td>取消上传请求</td><td>（ file: fileList 中的 file 对象 ）</td></tr><tr><td>submit</td><td>手动上传文件列表</td><td>—</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_5\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_13,\n    _hoisted_14,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    _hoisted_17,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_18\n      ]),\n      _: 1\n    }),\n    _hoisted_19,\n    _hoisted_20,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_21\n      ]),\n      _: 1\n    }),\n    _hoisted_22,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      _: 1\n    }),\n    _hoisted_24,\n    _hoisted_25,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_26\n      ]),\n      _: 1\n    }),\n    _hoisted_27\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/zh-CN/upload.md?vue&type=template&id=07488a3b\n");

/***/ })

}]);